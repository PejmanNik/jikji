"use strict";(self.webpackChunk_jikji_website=self.webpackChunk_jikji_website||[]).push([[908],{3408:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(3289);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3068:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return l}});var n=r(744),o=r(4690),a=(r(3289),r(3408)),i=["components"],p={sidebar_position:2},s="Generator",c={unversionedId:"generator",id:"generator",title:"Generator",description:"In order to create reports in the server (Server Side Generator), you can use this library. It requires direct access to your report react static output files or a URL to served versions of it (this project must use the base package @jikji/react). Generator uses Puppeteer to generate report in different format.",source:"@site/docs/generator.md",sourceDirName:".",slug:"/generator",permalink:"/docs/generator",draft:!1,editUrl:"https://github.com/PejmanNik/jikji/edit/main/docs/docs/docs/generator.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/intro"},next:{title:"Styling",permalink:"/docs/styling"}},u={},l=[],d={toc:l};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generator"},"Generator"),(0,a.kt)("p",null,"In order to create reports in the server (Server Side Generator), you can use this library. It requires direct access to your report react static output files or a URL to served versions of it (this project must use the base package ",(0,a.kt)("inlineCode",{parentName:"p"},"@jikji/react"),"). Generator uses ",(0,a.kt)("a",{parentName:"p",href:"https://pptr.dev/"},"Puppeteer")," to generate report in different format."),(0,a.kt)("p",null,"In this mode you can use ",(0,a.kt)("a",{parentName:"p",href:"/docs/components/router/browser-router"},"Router")," component to handle multiple reports in one react project and also ",(0,a.kt)("a",{parentName:"p",href:"/docs/inject-json-data"},"Inject Json Data")," can help you to send dynamic data directly to the react components of the report."),(0,a.kt)("p",null,"Get started by adding the library to your project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @jikji/generator\n")),(0,a.kt)("p",null,"Or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @jikji/generator\n")),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"ReportBuilder")," object from this library, setup your configuration and build your report, The full documentation of options object is available in the ",(0,a.kt)("a",{parentName:"p",href:"https://pptr.dev/next/api/puppeteer.pdfoptions"},"puppeteer")," doc."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import ReportBuilder from @jikji/generator;\nimport puppeteer from "puppeteer";\n\n...\n\nconst browser = await puppeteer.launch({\n  args: ["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage"],\n});\n\ntry {\n    await ReportBuilder.browser(browser)\n        .remoteHost("http://my-reports.com")\n        .report("reports/1")\n        .pdf(options)\n        .build();\n\n}\nfinally\n{\n    await browser.close();\n}\n...\n')),(0,a.kt)("p",null,"Or instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"remoteHost")," use ",(0,a.kt)("inlineCode",{parentName:"p"},"serve")," method and provide a path to the root folder that contains your report react build folder. Check the ",(0,a.kt)("inlineCode",{parentName:"p"},"example/ssg")," folder for the complete example."))}f.isMDXComponent=!0}}]);